@use "sass:math";
@use "sass:map";
@use "../variables" as *;
@use "../mixins" as *;

/* Layout
========================================================================== */

/* Grid System
--------------------------------*/
.container {
  @include container;
}

.container-fluid {
  width: 100%;
  padding-right: math.div($grid-gutter-width, 2);
  padding-left: math.div($grid-gutter-width, 2);
  margin-right: auto;
  margin-left: auto;
}

.row {
  @include row;
}

// Column classes
@for $i from 1 through $grid-columns {
  .col-#{$i} {
    @include column($i);
  }
}

// Responsive column classes
@each $breakpoint, $width in $breakpoints {
  @if $breakpoint != 'xs' {
    @include breakpoint-up($breakpoint) {
      @for $i from 1 through $grid-columns {
        .col-#{$breakpoint}-#{$i} {
          @include column($i);
        }
      }
    }
  }
}

/* Page Sections
--------------------------------*/
.section {
  padding: $spacer * 2 0;
  
  @include breakpoint-up(md) {
    padding: $spacer * 3 0;
  }
  
  @include breakpoint-up(lg) {
    padding: $spacer * 4 0;
  }
  
  &--sm {
    padding: $spacer 0;
    
    @include breakpoint-up(md) {
      padding: $spacer * 1.5 0;
    }
    
    @include breakpoint-up(lg) {
      padding: $spacer * 2 0;
    }
  }
  
  &--lg {
    padding: $spacer * 3 0;
    
    @include breakpoint-up(md) {
      padding: $spacer * 4 0;
    }
    
    @include breakpoint-up(lg) {
      padding: $spacer * 5 0;
    }
  }
  
  &--light {
    background-color: $light;
  }
  
  &--dark {
    background-color: $dark;
    color: $white;
  }
  
  &--primary {
    background-color: $primary;
    color: $white;
  }
  
  &--breast-cancer {
    background-color: rgba($breast-cancer-pink, 0.1);
  }
}

/* Spacing Utilities
--------------------------------*/

// Margin
@each $size, $value in $spacers {
  .m-#{$size} {
    margin: $value !important;
  }
  
  .mt-#{$size} {
    margin-top: $value !important;
  }
  
  .mr-#{$size} {
    margin-right: $value !important;
  }
  
  .mb-#{$size} {
    margin-bottom: $value !important;
  }
  
  .ml-#{$size} {
    margin-left: $value !important;
  }
  
  .mx-#{$size} {
    margin-left: $value !important;
    margin-right: $value !important;
  }
  
  .my-#{$size} {
    margin-top: $value !important;
    margin-bottom: $value !important;
  }
}

// Auto margins
.m-auto {
  margin: auto !important;
}

.mt-auto {
  margin-top: auto !important;
}

.mr-auto {
  margin-right: auto !important;
}

.mb-auto {
  margin-bottom: auto !important;
}

.ml-auto {
  margin-left: auto !important;
}

.mx-auto {
  margin-left: auto !important;
  margin-right: auto !important;
}

.my-auto {
  margin-top: auto !important;
  margin-bottom: auto !important;
}

// Padding
@each $size, $value in $spacers {
  .p-#{$size} {
    padding: $value !important;
  }
  
  .pt-#{$size} {
    padding-top: $value !important;
  }
  
  .pr-#{$size} {
    padding-right: $value !important;
  }
  
  .pb-#{$size} {
    padding-bottom: $value !important;
  }
  
  .pl-#{$size} {
    padding-left: $value !important;
  }
  
  .px-#{$size} {
    padding-left: $value !important;
    padding-right: $value !important;
  }
  
  .py-#{$size} {
    padding-top: $value !important;
    padding-bottom: $value !important;
  }
}

/* Flexbox Utilities
--------------------------------*/
.d-flex {
  display: flex !important;
}

.d-inline-flex {
  display: inline-flex !important;
}

.flex-row {
  flex-direction: row !important;
}

.flex-column {
  flex-direction: column !important;
}

.flex-wrap {
  flex-wrap: wrap !important;
}

.flex-nowrap {
  flex-wrap: nowrap !important;
}

.justify-content-start {
  justify-content: flex-start !important;
}

.justify-content-end {
  justify-content: flex-end !important;
}

.justify-content-center {
  justify-content: center !important;
}

.justify-content-between {
  justify-content: space-between !important;
}

.justify-content-around {
  justify-content: space-around !important;
}

.align-items-start {
  align-items: flex-start !important;
}

.align-items-end {
  align-items: flex-end !important;
}

.align-items-center {
  align-items: center !important;
}

.align-items-baseline {
  align-items: baseline !important;
}

.align-items-stretch {
  align-items: stretch !important;
}

.align-self-start {
  align-self: flex-start !important;
}

.align-self-end {
  align-self: flex-end !important;
}

.align-self-center {
  align-self: center !important;
}

.align-self-baseline {
  align-self: baseline !important;
}

.align-self-stretch {
  align-self: stretch !important;
}

/* Display Utilities
--------------------------------*/
.d-none {
  display: none !important;
}

.d-inline {
  display: inline !important;
}

.d-inline-block {
  display: inline-block !important;
}

.d-block {
  display: block !important;
}

.d-table {
  display: table !important;
}

.d-table-row {
  display: table-row !important;
}

.d-table-cell {
  display: table-cell !important;
}

// Responsive display utilities
@each $breakpoint in map.keys($breakpoints) {
  @if $breakpoint != 'xs' {
    @include breakpoint-up($breakpoint) {
      .d-#{$breakpoint}-none {
        display: none !important;
      }
      
      .d-#{$breakpoint}-inline {
        display: inline !important;
      }
      
      .d-#{$breakpoint}-inline-block {
        display: inline-block !important;
      }
      
      .d-#{$breakpoint}-block {
        display: block !important;
      }
      
      .d-#{$breakpoint}-flex {
        display: flex !important;
      }
    }
  }
}

/* Position utilities
--------------------------------*/
.position-relative {
  position: relative !important;
}

.position-absolute {
  position: absolute !important;
}

.position-fixed {
  position: fixed !important;
}

.position-sticky {
  position: sticky !important;
}

.fixed-top {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: $z-index-fixed;
}

.fixed-bottom {
  position: fixed;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: $z-index-fixed;
}

/* Width and height utilities
--------------------------------*/
.w-25 {
  width: 25% !important;
}

.w-50 {
  width: 50% !important;
}

.w-75 {
  width: 75% !important;
}

.w-100 {
  width: 100% !important;
}

.h-25 {
  height: 25% !important;
}

.h-50 {
  height: 50% !important;
}

.h-75 {
  height: 75% !important;
}

.h-100 {
  height: 100% !important;
}

/* Overflow utilities
--------------------------------*/
.overflow-auto {
  overflow: auto !important;
}

.overflow-hidden {
  overflow: hidden !important;
}

.overflow-visible {
  overflow: visible !important;
}

.overflow-scroll {
  overflow: scroll !important;
}

/* Z-index utilities
--------------------------------*/
.z-index-0 {
  z-index: 0 !important;
}

.z-index-10 {
  z-index: 10 !important;
}

.z-index-100 {
  z-index: 100 !important;
}

.z-index-1000 {
  z-index: 1000 !important;
}

/* Visibility utilities
--------------------------------*/
.visible {
  visibility: visible !important;
}

.invisible {
  visibility: hidden !important;
} 